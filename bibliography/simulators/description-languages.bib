@techreport{Larsson:SimGen:1997,
  author      = {Larsson, Fredrik and Magnusson, Peter S. and Werner, Bengt},
  title       = {SimGen: Development of Efficient Instruction Set Simulators},
  year        = {1997},
  institution = {Swedish Institute of Computer Science},
  number      = {R97:03},
}

@article{Sepp:GDSL:2012,
  author     = {Sepp, Alexander and Kranz, Julian and Simon, Axel},
  title      = {GDSL: A Generic Decoder Specification Language for Interpreting Machine Language},
  year       = {2012},
  journal    = {Electron. Notes Theor. Comput. Sci.},
  abstract   = {The analysis of executable code requires the reconstruction of instructions from a sequence of bytes (or words) and a specification of their semantics. Most front-ends addressing this problem only support a single architecture, are bound to a specific programming language, or are hard to maintain. In this work, we present a domain specific language (DSL) called GDSL (Generic Decoder Specification Language) for specifying maintainable instruction decoders and the translation of instructions to a semantics. We motivate its design by illustrating its use for the Intel x86 platform. A compiler is presented that generates C code that rivals hand-crafted decoder implementations.},
  address    = {NLD},
  doi        = {10.1016/j.entcs.2012.11.006},
  issn       = {1571-0661},
  issue_date = {December, 2012},
  keywords   = {executable analysis, instruction decoder, program semantics, binary analysis},
  month      = {dec},
  numpages   = {12},
  pages      = {53-64},
  publisher  = {Elsevier Science Publishers B. V.},
  url        = {https://doi.org/10.1016/j.entcs.2012.11.006},
  volume     = {289},
}
