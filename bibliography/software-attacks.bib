@inproceedings{Murdock:Plundervolt:2020,
  author    = {Murdock, Kit and Oswald, David and Garcia, Flavio D. and Van Bulck, Jo and Gruss, Daniel and Piessens, Frank},
  title     = {Plundervolt: Software-based Fault Injection Attacks against Intel SGX},
  year      = {2020},
  booktitle = {2020 IEEE Symposium on Security and Privacy (SP)},
  doi       = {10.1109/SP40000.2020.00057},
  number    = {},
  pages     = {1466-1482},
  volume    = {},
}

@article{Wahbe:SoftwareFaultIsolation:1993,
  author     = {Wahbe, Robert and Lucco, Steven and Anderson, Thomas E. and Graham, Susan L.},
  title      = {Efficient Software-Based Fault Isolation},
  year       = {1993},
  journal    = {SIGOPS Oper. Syst. Rev.},
  abstract   = {One way to provide fault isolation among cooperating software modules is to place each in its own address space. However, for tightly-coupled modules, this solution incurs prohibitive context switch overhead. In this paper, we present a software approach to implementing fault isolation within a single address space.Our approach has two parts. First, we load the code and data for a distrusted module into its own fault do main, a logically separate portion of the application's address space. Second, we modify the object code of a distrusted module to prevent it from writing or jumping to an address outside its fault domain. Both these software operations are portable and programming language independent.Our approach poses a tradeoff relative to hardware fault isolation: substantially faster communication between fault domains, at a cost of slightly increased execution time for distrusted modules. We demonstrate that for frequently communicating modules, implementing fault isolation in software rather than hardware can substantially improve end-to-end application performance.},
  address    = {New York, NY, USA},
  doi        = {10.1145/173668.168635},
  issn       = {0163-5980},
  issue_date = {Dec. 1993},
  month      = {12},
  number     = {5},
  numpages   = {14},
  pages      = {203-216},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/173668.168635},
  volume     = {27},
}
